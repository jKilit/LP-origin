generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  username      String         @unique
  password      String
  avatar        String?
  createdAt     DateTime       @default(now())
  role          Role
  courses       Course[]       @relation("CourseInstructor")
  enrollments   Enrollment[]
}

enum Role {
  STUDENT
  INSTRUCTOR
}

model Course {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  image         String?
  category      String
  tags          String[]
  prerequisites String[]
  createdAt     DateTime     @default(now())
  instructor    User         @relation("CourseInstructor", fields: [instructorId], references: [id])
  instructorId  String       @db.ObjectId
  modules       Module[]
  enrollments   Enrollment[]
  price         Float
}

model Module {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  courseId String   @db.ObjectId
  course   Course   @relation(fields: [courseId], references: [id])
  lessons  Lesson[]
}

model Lesson {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  videoUrl  String
  resources String[]
  moduleId  String   @db.ObjectId
  module    Module   @relation(fields: [moduleId], references: [id])
}

model Enrollment {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  courseId String @db.ObjectId
  course   Course @relation(fields: [courseId], references: [id])
  progress Int    @default(0)
}
